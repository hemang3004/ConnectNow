{"version":3,"file":"static/js/284.8ab9b799.chunk.js","mappings":"kRAoJA,UArIkB,WAChB,OAA0BA,EAAAA,EAAAA,YAAU,eAA7BC,EAAK,KAAEC,EAAQ,KACtB,GAA8BF,EAAAA,EAAAA,WAAS,GAAM,eAA7BG,GAAF,KAAY,MACpBC,GAAUC,EAAAA,EAAAA,MACVC,GAAQC,EAAAA,EAAAA,KAMRC,EAAwB,yCAAG,2FACd,GAAjBL,GAAW,GACNF,EAAM,CAAD,eAQU,OAPlBK,EAAM,CACJG,MAAO,0BACPC,OAAQ,UACRC,SAAU,IACVC,YAAY,EACZC,SAAU,WAEZV,GAAW,GAAO,0BASjB,OATiB,SAKZW,EAAS,CACbC,QAAS,CACP,eAAgB,qBAElB,EAAD,OAEsBC,EAAAA,EAAAA,KACrB,4BACA,CAAEf,MAAAA,GACFa,GACA,KAAD,WAJW,EAAJG,KAMRX,EAAM,CACJG,MAAO,wBACPC,OAAQ,UACRC,SAAU,IACVC,YAAY,EACZC,SAAU,WAEZV,GAAW,GACXC,EAAQc,KAAK,KAAK,kDAElBZ,EAAM,CACJG,MAAO,kBACPU,YAAa,KAAMC,SAASH,KAAKI,QACjCX,OAAQ,QACRC,SAAU,IACVC,YAAY,EACZC,SAAU,WAEZV,GAAW,GAAO,0DAErB,kBA/C6B,mCAgD9B,OACE,SAAC,IAAS,CAACmB,KAAK,KAAKC,eAAa,YAChC,UAAC,KAAG,CACFC,GAAG,QACHC,EAAE,MACFC,EAAE,MACFC,EAAG,EACHC,aAAa,KACbC,YAAY,MACZC,GAAI,IAAI,WAER,SAAC,IAAI,CACHC,SAAS,MACTC,WAAW,YACXC,UAAU,SACVC,WAAY,OACZJ,GAAI,EAAE,SACP,sBAGD,SAAC,IAAI,CACHC,SAAS,KACTC,WAAW,YACXC,UAAU,SACVE,GAAI,EACJC,GAAI,EACJN,GAAI,EAAE,SACP,uFAID,UAAC,IAAM,CAACO,QAAQ,MAAK,WACnB,UAAC,KAAW,CAACC,GAAG,QAAQC,YAAU,aAChC,SAAC,IAAS,CAACJ,GAAI,KAAML,GAAI,GAAG,SAAC,WAG7B,SAAC,EAAAU,EAAK,CACJL,GAAI,KACJM,MAAM,MACNC,YAAY,mBACZC,SAAU,SAACC,GACT1C,EAAS0C,EAAEC,OAAOC,MACpB,QAIJ,SAAC,IAAM,CACLC,YAAY,OACZN,MAAM,MACNO,MAAO,CAAEC,UAAW,IACpBC,QAAS1C,EACT2C,OAAO,UACP,SACD,qBAGD,SAAC,IAAM,CACLJ,YAAY,QACZK,MAAM,UACNX,MAAM,OACNV,SAAU,GACVG,WAAY,CAAEmB,KAAM,KACpBL,MAAO,CAAEC,UAAW,IAGpBC,QArHW,WACnB9C,EAAQc,KAAK,IACf,EAmHgC,SACvB,yBAOX,C","sources":["Pages/ResetPage.js"],"sourcesContent":["import {\n  Button,\n  FormControl,\n  FormLabel,\n  Input,\n  VStack,\n  Box,\n  Text,\n  Container,\n  useToast,\n} from \"@chakra-ui/react\";\nimport axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst ResetPage = () => {\n  const [email, setEmail] = useState();\n  const [loading, setLoading] = useState(false);\n  const history = useHistory();\n  const toast = useToast();\n\n  const loginHandler = () => {\n    history.push(\"/\");\n  };\n\n  const submitHandlerForPassword = async () => {\n    setLoading(true);\n    if (!email) {\n      toast({\n        title: \"Please Fill Email Feild\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setLoading(false);\n      return;\n    }\n\n    try {\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n      };\n\n      const { data } = await axios.post(\n        \"/api/user/forgot-password\",\n        { email },\n        config\n      );\n\n      toast({\n        title: \"Email Sent Successful\",\n        status: \"success\",\n        duration: 2000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setLoading(false);\n      history.push(\"/\");\n    } catch (error) {\n      toast({\n        title: \"Email not sent!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setLoading(false);\n    }\n  };\n  return (\n    <Container maxW=\"xl\" centerContent>\n      <Box\n        bg=\"white\"\n        w=\"80%\"\n        h=\"380\"\n        p={4}\n        borderRadius=\"lg\"\n        borderWidth=\"1px\"\n        mt={160}\n      >\n        <Text\n          fontSize=\"3xl\"\n          fontFamily=\"Work sans\"\n          textAlign=\"center\"\n          fontWeight={\"bold\"}\n          mt={8}\n        >\n          Forgot Password?\n        </Text>\n        <Text\n          fontSize=\"sm\"\n          fontFamily=\"Work sans\"\n          textAlign=\"center\"\n          ml={7}\n          mr={7}\n          mt={1}\n        >\n          Enter your email address and we'll send you a link to get back into\n          your account.\n        </Text>\n        <VStack spacing=\"5px\">\n          <FormControl id=\"email\" isRequired>\n            <FormLabel ml={39.9} mt={30}>\n              Email\n            </FormLabel>\n            <Input\n              ml={39.9}\n              width=\"80%\"\n              placeholder=\"Enter Your Email\"\n              onChange={(e) => {\n                setEmail(e.target.value);\n              }}\n            />\n          </FormControl>\n\n          <Button\n            colorScheme=\"blue\"\n            width=\"80%\"\n            style={{ marginTop: 15 }}\n            onClick={submitHandlerForPassword}\n            cursor=\"pointer\"\n            // isDisabled={true}\n          >\n            Send Login Link\n          </Button>\n          <Button\n            colorScheme=\"white\"\n            color=\"#718096\"\n            width=\"100%\"\n            fontSize={14}\n            fontWeight={{ bold: 750 }}\n            style={{ marginTop: 15 }}\n            // pl={{ md: 230, sm: 270 }}\n            // pr={{ base: 0, md: 0 }}\n            onClick={loginHandler}\n          >\n            Back to Login\n          </Button>\n        </VStack>\n      </Box>\n    </Container>\n  );\n};\n\nexport default ResetPage;\n"],"names":["useState","email","setEmail","setLoading","history","useHistory","toast","useToast","submitHandlerForPassword","title","status","duration","isClosable","position","config","headers","axios","data","push","description","response","message","maxW","centerContent","bg","w","h","p","borderRadius","borderWidth","mt","fontSize","fontFamily","textAlign","fontWeight","ml","mr","spacing","id","isRequired","I","width","placeholder","onChange","e","target","value","colorScheme","style","marginTop","onClick","cursor","color","bold"],"sourceRoot":""}