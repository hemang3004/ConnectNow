{"version":3,"file":"static/js/663.76cb9cd3.chunk.js","mappings":"kRA0IA,UA3HA,WACE,IAAMA,GAAQC,EAAAA,EAAAA,KACRC,GAAUC,EAAAA,EAAAA,MAChB,GAA0BC,EAAAA,EAAAA,YAAU,eAA7BC,EAAK,KAAEC,EAAQ,KACtB,GAAgCF,EAAAA,EAAAA,YAAU,eAAnCG,EAAQ,KAAEC,EAAW,KAC5B,GAAwBJ,EAAAA,EAAAA,WAAS,GAAM,eAAhCK,EAAI,KAAEC,EAAO,KACpB,GAA8BN,EAAAA,EAAAA,WAAS,GAAM,eAAtCO,EAAO,KAAEC,EAAU,KAKpBC,IAJcC,EAAAA,EAAAA,KAAZC,QAIW,yCAAG,6FACH,GAAjBH,GAAW,GACNP,GAAUE,EAAQ,gBAQH,OAPlBP,EAAM,CACJgB,MAAO,6BACPC,OAAQ,UACRC,SAAU,IACVC,YAAY,EACZC,SAAU,WAEZR,GAAW,GAAO,0BAUjB,OAViB,SAMZS,EAAS,CACbC,QAAS,CACP,eAAgB,qBAElB,EAAD,OAEsBC,EAAAA,EAAAA,KACrB,kBACA,CAAElB,MAAAA,EAAOE,SAAAA,GACTc,GACA,KAAD,WAJOG,EAAI,EAAJA,KAORxB,EAAM,CACJgB,MAAO,mBACPC,OAAQ,UACRC,SAAU,IACVC,YAAY,EACZC,SAAU,WAEZK,aAAaC,QAAQ,WAAYC,KAAKC,UAAUJ,IAChDZ,GAAW,GACXV,EAAQ2B,KAAK,SAAS,kDAEtB7B,EAAM,CACJgB,MAAO,iBACPc,YAAa,KAAMC,SAASP,KAAKQ,QACjCf,OAAQ,QACRC,SAAU,IACVC,YAAY,EACZC,SAAU,WAEZR,GAAW,GAAO,0DAErB,kBAlDkB,oCAuDnB,OACE,UAAC,IAAM,CAACqB,QAAQ,MAAK,WACnB,UAAC,KAAW,CAACC,GAAG,QAAQC,YAAU,aAChC,SAAC,IAAS,UAAC,WACX,SAAC,EAAAC,EAAK,CACJC,YAAY,mBACZC,SAAU,SAACC,GACTjC,EAASiC,EAAEC,OAAOC,MACpB,QAIJ,UAAC,KAAW,CAACP,GAAG,WAAWC,YAAU,aACnC,SAAC,IAAS,UAAC,cACX,UAAC,IAAU,YACT,SAAC,EAAAC,EAAK,CACJM,KAAMjC,EAAO,OAAS,WACtB4B,YAAY,sBACZC,SAAU,SAACC,GACT/B,EAAY+B,EAAEC,OAAOC,MACvB,KAEF,SAAC,IAAiB,CAACE,MAAM,SAAQ,UAC/B,mBAAQC,EAAE,UAAUC,KAAK,KAAKC,QAhFpB,WAAH,OAASpC,GAASD,EAAM,EAgFoB,SAChDA,EAAO,OAAS,kBAMzB,SAAC,IAAM,CACLsC,YAAY,OACZJ,MAAM,OACNK,MAAO,CAAEC,UAAW,IACpBH,QAASjC,EACTqC,UAAWvC,EAAQ,SACpB,YAGD,SAAC,IAAM,CACLoC,YAAY,QAEZI,MAAM,UAENR,MAAM,OACNS,WAAY,CAAEC,KAAM,KACpBL,MAAO,CAAEC,UAAW,IACpBK,GAAI,CAAEC,KAAM,IAAKC,GAAI,IAAKC,GAAI,KAC9BC,GAAI,CAAEH,KAAM,EAAGC,GAAI,GACnBV,QApDY,WAChB5C,EAAQ2B,KAAK,SACf,EAkDyB,SACpB,uBAKP,C","sources":["Components/Authentication/Login.js"],"sourcesContent":["import {\n  Button,\n  FormControl,\n  FormLabel,\n  Input,\n  InputGroup,\n  InputRightElement,\n  VStack,\n} from \"@chakra-ui/react\";\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { useToast } from \"@chakra-ui/toast\";\nimport { useHistory } from \"react-router-dom\";\nimport { ChatState } from \"../../Context/ChatProvider\";\n\nfunction Login() {\n  const toast = useToast();\n  const history = useHistory();\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState();\n  const [show, setShow] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const { setUser } = ChatState();\n\n  const handleClick = () => setShow(!show);\n\n  const submitHandler = async () => {\n    setLoading(true);\n    if (!email || !password) {\n      toast({\n        title: \"Please Fill all the Feilds\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setLoading(false);\n      return;\n    }\n\n    // console.log(email, password);\n    try {\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n      };\n\n      const { data } = await axios.post(\n        \"/api/user/login\",\n        { email, password },\n        config\n      );\n\n      // console.log(JSON.stringify(data));\n      toast({\n        title: \"Login Successful\",\n        status: \"success\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\n      setLoading(false);\n      history.push(\"/main\");\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setLoading(false);\n    }\n  };\n\n  const resetPass = () => {\n    history.push(\"/reset\");\n  };\n  return (\n    <VStack spacing=\"5px\">\n      <FormControl id=\"email\" isRequired>\n        <FormLabel>Email</FormLabel>\n        <Input\n          placeholder=\"Enter Your Email\"\n          onChange={(e) => {\n            setEmail(e.target.value);\n          }}\n        />\n      </FormControl>\n\n      <FormControl id=\"password\" isRequired>\n        <FormLabel>Password</FormLabel>\n        <InputGroup>\n          <Input\n            type={show ? \"text\" : \"password\"}\n            placeholder=\"Enter Your Password\"\n            onChange={(e) => {\n              setPassword(e.target.value);\n            }}\n          />\n          <InputRightElement width=\"4.5rem\">\n            <button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\n              {show ? \"Hide\" : \"Show\"}\n            </button>\n          </InputRightElement>\n        </InputGroup>\n      </FormControl>\n\n      <Button\n        colorScheme=\"blue\"\n        width=\"100%\"\n        style={{ marginTop: 15 }}\n        onClick={submitHandler}\n        isLoading={loading}\n      >\n        Log In\n      </Button>\n      <Button\n        colorScheme=\"white\"\n        // color=\"#3182ce\"\n        color=\"#718096\"\n        // color=\"#1a202c\"\n        width=\"100%\"\n        fontWeight={{ bold: 650 }}\n        style={{ marginTop: 15 }}\n        pl={{ base: 400, md: 350, sm: 270 }}\n        pr={{ base: 0, md: 0 }}\n        onClick={resetPass}\n      >\n        Forgot Password?\n      </Button>\n    </VStack>\n  );\n}\n\nexport default Login;\n"],"names":["toast","useToast","history","useHistory","useState","email","setEmail","password","setPassword","show","setShow","loading","setLoading","submitHandler","ChatState","setUser","title","status","duration","isClosable","position","config","headers","axios","data","localStorage","setItem","JSON","stringify","push","description","response","message","spacing","id","isRequired","I","placeholder","onChange","e","target","value","type","width","h","size","onClick","colorScheme","style","marginTop","isLoading","color","fontWeight","bold","pl","base","md","sm","pr"],"sourceRoot":""}