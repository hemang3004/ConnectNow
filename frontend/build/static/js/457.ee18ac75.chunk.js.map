{"version":3,"file":"static/js/457.ee18ac75.chunk.js","mappings":"yYAwKA,MAlJA,WACE,OAA4BA,EAAAA,EAAAA,UAAS,IAAG,eAAjCC,EAAM,KAAEC,EAAS,KACxB,GAAwCF,EAAAA,EAAAA,UAAS,IAAG,eAA7CG,EAAY,KAAEC,EAAe,KACpC,GAA8BJ,EAAAA,EAAAA,WAAS,GAAM,eAAtCK,EAAO,KAAEC,EAAU,KAC1B,GAAsCN,EAAAA,EAAAA,WAAS,GAAM,eAA9CO,EAAW,KAAEC,EAAc,KAElC,GAOIC,EAAAA,EAAAA,KANFC,EAAe,EAAfA,gBACAC,EAAI,EAAJA,KACAC,EAAK,EAALA,MACAC,EAAQ,EAARA,SAEAC,GADY,EAAZC,aACe,EAAfD,iBAEIE,GAAQC,EAAAA,EAAAA,KAEd,GAAoCC,EAAAA,EAAAA,KAA5BC,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAO,EAAPA,QAElBC,EAAY,yCAAG,gGACdrB,EAAO,CAAD,eAON,OANHe,EAAM,CACJO,MAAO,mCACPC,OAAQ,UACRC,SAAU,IACVC,YAAY,EACZC,SAAU,aACT,0BAWF,OAXE,SAKHrB,GAAW,GAELsB,EAAS,CACbC,QAAS,CACPC,cAAc,UAAD,OAAYnB,EAAKoB,SAEhC,EAAD,OAEsBC,EAAAA,EAAAA,IAAU,oBAAD,OAAqB/B,GAAU2B,GAAQ,KAAD,WAA9DK,EAAI,EAAJA,KAER3B,GAAW,GACXF,EAAgB6B,GAAM,kDAEtBjB,EAAM,CACJO,MAAO,iBACPW,YAAa,oCACbV,OAAQ,QACRC,SAAU,IACVC,YAAY,EACZC,SAAU,gBACT,0DAEN,kBAnCiB,mCAqCZQ,EAAU,yCAAG,WAAOC,GAAM,gFAa5B,OAZFC,QAAQC,IAAIF,GAEZtB,EAAgB,SAAS,SAEvBN,GAAe,GACToB,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAYnB,EAAKoB,SAIlC,SACuBC,EAAAA,EAAAA,KAAW,YAAa,CAAEI,OAAAA,GAAUR,GAAQ,KAAD,WAA1DK,EAAI,EAAJA,KAEHrB,EAAM2B,MAAK,SAACC,GAAC,OAAKA,EAAEC,MAAQR,EAAKQ,GAAG,KAAG5B,EAAS,CAACoB,GAAI,eAAKrB,KAC/DF,EAAgBuB,GAChBzB,GAAe,GACfa,IAAU,kDAEVL,EAAM,CACJO,MAAO,0BACPW,YAAa,KAAMQ,QACnBlB,OAAQ,QACRC,SAAU,IACVC,YAAY,EACZC,SAAU,gBACT,0DAEN,gBA9Be,sCAgChB,OACE,iCACE,SAAC,KAAG,CACFgB,QAAQ,OACRC,eAAe,gBACfC,WAAW,SACXC,EAAG,MACHC,aAAa,KACbC,YAAY,MAAK,UAEjB,SAAC,IAAO,CAACC,MAAM,uBAAuBC,UAAQ,EAACC,UAAU,aAAY,UACnE,SAAC,IAAM,CAACC,QAAQ,QAAQC,QAASjC,EAAQkC,EAAG,GAAG,UAC7C,SAAC,IAAI,CACHC,GAAIC,EAAAA,IAEJC,QAAS,CAAEC,GAAI,EAAGC,GAAI,EAAGC,KAAM,GAC/BN,EAAG,CAAEI,GAAI,GAAIC,GAAI,GAAIC,KAAM,YAUnC,UAAC,IAAM,CAACT,UAAU,OAAO9B,QAASA,EAASF,OAAQA,EAAO,WACxD,SAAC,IAAa,KACd,UAAC,IAAa,YACZ,SAAC,IAAY,CAAC0C,kBAAkB,MAAK,SAAC,kBACtC,UAAC,IAAU,YACT,UAAC,KAAG,CAAClB,QAAQ,OAAOmB,GAAI,EAAE,WACxB,SAAC,EAAAC,EAAK,CACJC,YAAY,0BACZC,GAAI,EACJC,MAAOjE,EACPkE,SAAU,SAACC,GAAC,OAAKlE,EAAUkE,EAAEC,OAAOH,MAAM,KAE5C,SAAC,IAAM,CAACb,QAAS/B,EAAa,SAAC,UAEhCjB,GACC,SAACiE,EAAA,EAAW,IAEA,OAAZnE,QAAY,IAAZA,OAAY,EAAZA,EAAcoE,KAAI,SAAC5D,GAAI,OACrB,SAAC6D,EAAA,EAAY,CAEX7D,KAAMA,EACN8D,eAAgB,kBAAMtC,EAAWxB,EAAK8B,IAAI,GAFrC9B,EAAK8B,IAGV,IAGLlC,IAAe,SAAC,IAAO,CAACmE,GAAG,OAAO/B,QAAQ,oBAMvD,E,oGCnIMgC,GAAQC,EAAAA,EAAAA,IAAY,CAAEC,YARR,CAClBjB,KAAM,QACND,GAAI,QACJD,GAAI,SACJoB,GAAI,SACJC,GAAI,SACJ,MAAO,YAoJT,EAhJgB,WACd,OAAgDtE,EAAAA,EAAAA,KAAxCM,EAAY,EAAZA,aAAcD,EAAe,EAAfA,gBAAiBH,EAAI,EAAJA,KACvC,GAAoCO,EAAAA,EAAAA,KAA5BC,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAO,EAAPA,QAClB2D,EAAc,SAACC,GACnBnE,EAAgBmE,EAClB,EAEMC,GAAUC,EAAAA,EAAAA,MAShB,OACE,SAAC,IAAc,CAACR,MAAOA,EAAM,UAC3B,SAAC,KAAG,CAACS,MAAM,OAAOC,EAAG,EAAGC,GAAI,UAAWtC,YAAY,MAAMuC,KAAM,OAAO,UACpE,UAAC,IAAK,CAACC,QAAS,EAAGC,GAAI,EAAGf,GAAI,EAAE,WAE9B,SAAC,IAAM,CACLgB,KAAK,KACLC,OAAO,UACPC,IAAI,4FAEN,SAAC,EAAU,KAEX,SAAC,IAAO,CAAC3C,MAAM,QAAQC,UAAQ,EAACC,UAAU,aAAY,UACpD,SAAC,KAAG,CACFE,QAAS,WACP2B,EAAY,QACd,EACArC,QAAQ,OACRgD,OAAO,UACPL,GAAqB,UAAjBvE,EAA2B,UAAY,UAC3C8E,MAAwB,UAAjB9E,EAA2B,UAAY,QAE9C+B,EAAG,MACHC,aAAa,KACbC,YAAY,MAAK,UAEjB,SAAC,IAAI,CACHO,GAAIuC,EAAAA,IACJpB,GAAI,CAAEhB,GAAI,EAAGC,GAAI,EAAGC,KAAM,GAC1BH,QAAS,CAAEC,GAAI,EAAGC,GAAI,EAAGC,KAAM,GAC/BN,EAAG,CAAEI,GAAI,GAAIC,GAAI,GAAIC,KAAM,MATxB,MAkBT,SAAC,IAAO,CAACX,MAAM,WAAWC,UAAQ,EAACC,UAAU,aAAY,UACvD,SAAC,KAAG,CACFE,QAAS,WACP2B,EAAY,UACd,EACArC,QAAQ,OACRgD,OAAQ,UACRL,GAAqB,YAAjBvE,EAA6B,UAAY,UAC7C8E,MAAwB,YAAjB9E,EAA6B,UAAY,QAEhD+B,EAAG,MACHC,aAAa,KACbC,YAAY,MAAK,UAEjB,SAAC,IAAI,CACHO,GAAIwC,EAAAA,IACJrB,GAAI,CAAEhB,GAAI,EAAGC,GAAI,EAAGC,KAAM,GAC1BH,QAAS,CAAEC,GAAI,EAAGC,GAAI,EAAGC,KAAM,GAC/BN,EAAG,CAAEI,GAAI,GAAIC,GAAI,GAAIC,KAAM,MATxB,MAcT,SAAC,IAAO,CAACX,MAAM,UAAUC,UAAQ,EAACC,UAAU,aAAY,UACtD,SAAC,KAAG,CACFE,QAAS,WACP2B,EAAY,aACd,EACArC,QAAQ,OACRgD,OAAQ,UACRE,MAAO,QAEP/C,EAAG,MAAM,SAEJ,OAAJnC,QAAI,IAAJA,GAAAA,EAAMqF,KACL,SAAC,IAAM,CACLN,KAAK,KACLC,OAAO,UACPM,KAAU,OAAJtF,QAAI,IAAJA,OAAI,EAAJA,EAAMsF,KACZL,IAAS,OAAJjF,QAAI,IAAJA,OAAI,EAAJA,EAAMqF,IACXtB,GAAI,KAGN,SAAC,IAAM,CAACgB,KAAK,KAAKC,OAAO,UAAUM,KAAU,OAAJtF,QAAI,IAAJA,OAAI,EAAJA,EAAMsF,KAAMvB,GAAI,KAZtD,MAiBT,SAAC,IAAO,CAACzB,MAAM,UAAUC,UAAQ,EAACC,UAAU,aAAY,UACtD,UAAC,KAAG,CACFE,QAASjC,EACTuB,QAAQ,OACRgD,OAAQ,UACRE,MAAO,QAEP/C,EAAG,MAAM,WAET,SAAC,IAAI,CACHS,GAAI2C,EAAAA,IACJxB,GAAI,CAAEhB,GAAI,EAAGC,GAAI,EAAGC,KAAM,GAC1BH,QAAS,CAAEC,GAAI,EAAGC,GAAI,EAAGC,KAAM,GAC/BN,EAAG,CAAEI,GAAI,GAAIC,GAAI,GAAIC,KAAM,MAE7B,SAAC,IAAW,CAACzC,OAAQA,EAAQE,QAASA,EAAS8E,YAAU,YACvD,SAAC,IAAkB,WACjB,UAAC,IAAkB,YACjB,SAAC,IAAiB,UAAC,aACnB,SAAC,IAAe,UACb,mCAEH,UAAC,IAAiB,YAChB,SAAC,IAAM,CAAC9C,QAAShC,EAASqD,GAAI,EAAE,SAAC,QAGjC,SAAC,IAAM,CAACrB,QAxHN,WACpB+C,aAAaC,WAAW,YACxBD,aAAaE,QACbpB,EAAQqB,KAAK,KACbC,OAAOC,SAASC,QAClB,EAmHoDC,YAAY,MAAMjC,GAAI,EAAE,SAAC,oBApB5D,WAiCnB,C,4ECvIA,IAvCqB,SAAH,GAAkC,IAA5B/D,EAAI,EAAJA,KAAM8D,EAAc,EAAdA,eAG5B,OACE,UAAC,KAAG,CACFpB,QAASoB,EACTkB,OAAO,UACPL,GAAG,UACHsB,OAAQ,CACNC,WAAY,UACZhB,MAAO,SAET/C,EAAE,OACFgE,EAAE,OACFjE,WAAW,SACXgD,MAAM,QACNkB,GAAI,EACJC,GAAI,EACJC,GAAI,EACJlE,aAAa,KAAI,WAEjB,SAAC,IAAM,CACLkB,GAAI,EACJyB,KAAK,KACLC,OAAO,UACPM,KAAMtF,EAAKsF,KACXL,IAAKjF,EAAKqF,OAEZ,UAAC,KAAG,YACF,SAAC,IAAI,UAAErF,EAAKsF,QACZ,UAAC,IAAI,CAACiB,SAAS,KAAI,WACjB,uBAAG,aACFvG,EAAKwG,cAKhB,C","sources":["Components/miscellaneous/SideDrawer.js","Components/SideBar.js","Components/UserAvatar/UserListItem.js"],"sourcesContent":["import {\n  Box,\n  Button,\n  Tooltip,\n  Drawer,\n  useDisclosure,\n  DrawerOverlay,\n  DrawerContent,\n  DrawerHeader,\n  DrawerBody,\n  Input,\n  useToast,\n  Spinner,\n  Icon,\n} from \"@chakra-ui/react\";\nimport { TbSearch } from \"react-icons/tb\";\n\nimport React, { useState } from \"react\";\nimport { ChatState } from \"../../Context/ChatProvider\";\nimport ChatLoading from \"../ChatLoading\";\nimport axios from \"axios\";\nimport UserListItem from \"../UserAvatar/UserListItem\";\nfunction SideDrawer() {\n  const [search, setSearch] = useState(\"\");\n  const [searchResult, setSearchResult] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [loadingChat, setLoadingChat] = useState(false);\n\n  const {\n    setSelectedChat,\n    user,\n    chats,\n    setChats,\n    selectedItem,\n    setSelectedItem,\n  } = ChatState();\n  const toast = useToast();\n\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  const handleSearch = async () => {\n    if (!search) {\n      toast({\n        title: \"Please Enter something in search\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"top-left\",\n      });\n      return;\n    }\n\n    try {\n      setLoading(true);\n\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n\n      const { data } = await axios.get(`/api/user?search=${search}`, config);\n\n      setLoading(false);\n      setSearchResult(data);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the Search Results\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\",\n      });\n    }\n  };\n\n  const accessChat = async (userId) => {\n    console.log(userId);\n\n    setSelectedItem(\"Chats\");\n    try {\n      setLoadingChat(true);\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\",\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n\n      // creating new chat\n      const { data } = await axios.post(`/api/chat`, { userId }, config);\n      // but if chat already exists then append the chat to the chatlist\n      if (!chats.find((c) => c._id === data._id)) setChats([data, ...chats]);\n      setSelectedChat(data);\n      setLoadingChat(false);\n      onClose();\n    } catch (error) {\n      toast({\n        title: \"Error fetching the chat\",\n        description: error.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\",\n      });\n    }\n  };\n\n  return (\n    <>\n      <Box\n        display=\"flex\"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        w={\"85%\"}\n        borderRadius=\"lg\"\n        borderWidth=\"1px\"\n      >\n        <Tooltip label=\"Search Users to chat\" hasArrow placement=\"bottom-end\">\n          <Button variant=\"ghost\" onClick={onOpen} h={12}>\n            <Icon\n              as={TbSearch}\n              // ml={{ md: 1, sm: 3, base: 3 }}\n              boxSize={{ md: 6, sm: 5, base: 5 }}\n              h={{ md: 12, sm: 10, base: 9 }}\n            ></Icon>\n          </Button>\n        </Tooltip>\n\n        {/* <Text fontSize=\"2xl\" fontFamily=\"Work sans\">\n          ConnectNow\n        </Text> */}\n      </Box>\n\n      <Drawer placement=\"left\" onClose={onClose} isOpen={isOpen}>\n        <DrawerOverlay />\n        <DrawerContent>\n          <DrawerHeader borderBottomWidth=\"1px\">Search Users</DrawerHeader>\n          <DrawerBody>\n            <Box display=\"flex\" pb={2}>\n              <Input\n                placeholder=\"Search by name or email\"\n                mr={2}\n                value={search}\n                onChange={(e) => setSearch(e.target.value)}\n              />\n              <Button onClick={handleSearch}>Go</Button>\n            </Box>\n            {loading ? (\n              <ChatLoading />\n            ) : (\n              searchResult?.map((user) => (\n                <UserListItem\n                  key={user._id}\n                  user={user}\n                  handleFunction={() => accessChat(user._id)}\n                />\n              ))\n            )}\n            {loadingChat && <Spinner ml=\"auto\" display=\"flex\" />}\n          </DrawerBody>\n        </DrawerContent>\n      </Drawer>\n    </>\n  );\n}\n\nexport default SideDrawer;","import SideDrawer from \"../Components/miscellaneous/SideDrawer\";\n\nimport {\n  Avatar,\n  Box,\n  ChakraProvider,\n  Icon,\n  Stack,\n  AlertDialog,\n  AlertDialogBody,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogContent,\n  AlertDialogOverlay,\n  Button,\n  useDisclosure,\n  Tooltip,\n} from \"@chakra-ui/react\";\nimport React from \"react\";\nimport { ChatState } from \"../Context/ChatProvider\";\nimport { TiGroup } from \"react-icons/ti\";\nimport { MdOutlineLogout } from \"react-icons/md\";\nimport { BiMessageDots } from \"react-icons/bi\";\nimport { extendTheme } from \"@chakra-ui/react\";\n\nimport { useHistory } from \"react-router-dom\";\n\nconst breakpoints = {\n  base: \"100px\",\n  sm: \"505px\",\n  md: \"1351px\",\n  lg: \"1229px\",\n  xl: \"2304px\",\n  \"2xl\": \"4096px\",\n};\nconst theme = extendTheme({ breakpoints });\n\nconst SideBar = () => {\n  const { selectedItem, setSelectedItem, user } = ChatState();\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const handleClick = (component) => {\n    setSelectedItem(component);\n  };\n\n  const history = useHistory();\n\n  const logoutHandler = () => {\n    localStorage.removeItem(\"userInfo\");\n    localStorage.clear();\n    history.push(\"/\");\n    window.location.reload();\n  };\n\n  return (\n    <ChakraProvider theme={theme}>\n      <Box width=\"70px\" m={0} bg={\"#ffffff\"} borderWidth=\"1px\" minW={\"65px\"}>\n        <Stack spacing={8} mt={5} ml={2}>\n          {/* <Icon as={RxHamburgerMenu} ml={3} boxSize={6} h={12} /> */}\n          <Avatar\n            size=\"md\"\n            cursor=\"pointer\"\n            src=\"https://res.cloudinary.com/dm37epkmg/image/upload/v1681997756/rxjix4do2njfhgohjvlc.jpg\"\n          />\n          <SideDrawer />\n\n          <Tooltip label=\"Chats\" hasArrow placement=\"bottom-end\">\n            <Box\n              onClick={() => {\n                handleClick(\"Chats\");\n              }}\n              display=\"flex\"\n              cursor=\"pointer\"\n              bg={selectedItem === \"Chats\" ? \"#4c6ed5\" : \"#ffffff\"}\n              color={selectedItem === \"Chats\" ? \"#ffffff\" : \"black\"}\n              key={1}\n              w={\"85%\"}\n              borderRadius=\"lg\"\n              borderWidth=\"1px\"\n            >\n              <Icon\n                as={BiMessageDots}\n                ml={{ md: 3, sm: 3, base: 3 }}\n                boxSize={{ md: 6, sm: 5, base: 5 }}\n                h={{ md: 12, sm: 10, base: 9 }}\n              />\n\n              {/* <Text display={\"grid\"} ml={8} alignContent={\"center\"}>\n            Chats\n          </Text> */}\n            </Box>\n          </Tooltip>\n\n          <Tooltip label=\"Channels\" hasArrow placement=\"bottom-end\">\n            <Box\n              onClick={() => {\n                handleClick(\"Channel\");\n              }}\n              display=\"flex\"\n              cursor={\"pointer\"}\n              bg={selectedItem === \"Channel\" ? \"#4c6ed5\" : \"#ffffff\"}\n              color={selectedItem === \"Channel\" ? \"#ffffff\" : \"black\"}\n              key={2}\n              w={\"85%\"}\n              borderRadius=\"lg\"\n              borderWidth=\"1px\"\n            >\n              <Icon\n                as={TiGroup}\n                ml={{ md: 3, sm: 3, base: 3 }}\n                boxSize={{ md: 6, sm: 5, base: 5 }}\n                h={{ md: 12, sm: 10, base: 9 }}\n              />\n            </Box>\n          </Tooltip>\n\n          <Tooltip label=\"Profile\" hasArrow placement=\"bottom-end\">\n            <Box\n              onClick={() => {\n                handleClick(\"UpdateUser\");\n              }}\n              display=\"flex\"\n              cursor={\"pointer\"}\n              color={\"black\"}\n              key={3}\n              w={\"80%\"}\n            >\n              {user?.pic ? (\n                <Avatar\n                  size=\"sm\"\n                  cursor=\"pointer\"\n                  name={user?.name}\n                  src={user?.pic}\n                  ml={2}\n                />\n              ) : (\n                <Avatar size=\"sm\" cursor=\"pointer\" name={user?.name} ml={2} />\n              )}\n            </Box>\n          </Tooltip>\n\n          <Tooltip label=\"Log-out\" hasArrow placement=\"bottom-end\">\n            <Box\n              onClick={onOpen}\n              display=\"flex\"\n              cursor={\"pointer\"}\n              color={\"black\"}\n              key={4}\n              w={\"85%\"}\n            >\n              <Icon\n                as={MdOutlineLogout}\n                ml={{ md: 3, sm: 3, base: 3 }}\n                boxSize={{ md: 8, sm: 7, base: 6 }}\n                h={{ md: 16, sm: 16, base: 9 }}\n              />\n              <AlertDialog isOpen={isOpen} onClose={onClose} isCentered>\n                <AlertDialogOverlay>\n                  <AlertDialogContent>\n                    <AlertDialogHeader>Log Out</AlertDialogHeader>\n                    <AlertDialogBody>\n                      {\"Are you sure want to log out?\"}\n                    </AlertDialogBody>\n                    <AlertDialogFooter>\n                      <Button onClick={onClose} ml={3}>\n                        NO\n                      </Button>\n                      <Button onClick={logoutHandler} colorScheme=\"red\" ml={3}>\n                        YES\n                      </Button>\n                    </AlertDialogFooter>\n                  </AlertDialogContent>\n                </AlertDialogOverlay>\n              </AlertDialog>\n            </Box>\n          </Tooltip>\n        </Stack>\n      </Box>\n    </ChakraProvider>\n  );\n};\n\nexport default SideBar;","import { Avatar } from \"@chakra-ui/avatar\";\nimport { Box, Text } from \"@chakra-ui/layout\";\n// import { ChatState } from \"../../Context/ChatProvider\";\nimport React from \"react\";\n\nconst UserListItem = ({ user, handleFunction }) => {\n  // const { user } = ChatState();\n\n  return (\n    <Box\n      onClick={handleFunction}\n      cursor=\"pointer\"\n      bg=\"#E8E8E8\"\n      _hover={{\n        background: \"#2b6cb0\",\n        color: \"white\",\n      }}\n      w=\"100%\"\n      d=\"flex\"\n      alignItems=\"center\"\n      color=\"black\"\n      px={3}\n      py={2}\n      mb={2}\n      borderRadius=\"lg\"\n    >\n      <Avatar\n        mr={2}\n        size=\"sm\"\n        cursor=\"pointer\"\n        name={user.name}\n        src={user.pic}\n      />\n      <Box>\n        <Text>{user.name}</Text>\n        <Text fontSize=\"xs\">\n          <b>Email : </b>\n          {user.email}\n        </Text>\n      </Box>\n    </Box>\n  );\n};\n\nexport default UserListItem;\n"],"names":["useState","search","setSearch","searchResult","setSearchResult","loading","setLoading","loadingChat","setLoadingChat","ChatState","setSelectedChat","user","chats","setChats","setSelectedItem","selectedItem","toast","useToast","useDisclosure","isOpen","onOpen","onClose","handleSearch","title","status","duration","isClosable","position","config","headers","Authorization","token","axios","data","description","accessChat","userId","console","log","find","c","_id","message","display","justifyContent","alignItems","w","borderRadius","borderWidth","label","hasArrow","placement","variant","onClick","h","as","TbSearch","boxSize","md","sm","base","borderBottomWidth","pb","I","placeholder","mr","value","onChange","e","target","ChatLoading","map","UserListItem","handleFunction","ml","theme","extendTheme","breakpoints","lg","xl","handleClick","component","history","useHistory","width","m","bg","minW","spacing","mt","size","cursor","src","color","BiMessageDots","TiGroup","pic","name","MdOutlineLogout","isCentered","localStorage","removeItem","clear","push","window","location","reload","colorScheme","_hover","background","d","px","py","mb","fontSize","email"],"sourceRoot":""}