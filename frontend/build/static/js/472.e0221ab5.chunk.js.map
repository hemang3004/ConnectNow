{"version":3,"file":"static/js/472.e0221ab5.chunk.js","mappings":"6RAmKA,UApJe,WACf,IAAMA,GAAMC,EAAAA,EAAAA,KACNC,GAAQC,EAAAA,EAAAA,MACPC,GAAeC,EAAAA,EAAAA,KAAfD,cAEHE,EAAM,KACR,GAAsBC,EAAAA,EAAAA,UAAS,IAAG,eAA3BC,EAAG,KAAEC,EAAM,KACZC,EAAa,yCAAC,2FAQI,OAPtBC,QAAQC,IAAI,iBAAgB,SAEpBC,EAAS,CACbC,QAAS,CACP,eAAgB,qBAGpBR,EAAMF,EAAc,SACCW,EAAAA,EAAAA,KACnB,YACA,CACET,MAAAA,EACAU,GAhBD,KAkBDH,GACA,KAAD,EAPII,EAAS,EAAD,KAQbN,QAAQC,IAAIK,GAAU,kDAGtBjB,EAAM,CACJkB,MAAO,iBACPC,YAAa,KAAMF,SAASG,KAAKC,QACjCC,OAAQ,QACRC,SAAU,IACVC,YAAY,EACZC,SAAU,WAEZ,0DAEH,kBA9BkB,mCA+BbC,EAAa,yCAAC,yFAMf,OANe,SAEVb,EAAS,CACbC,QAAS,CACP,eAAgB,qBAElB,EAAD,OACKC,EAAAA,EAAAA,KACJ,mBACA,CACEX,cAAAA,EACAuB,KAAKnB,GAEPK,GACA,KAAD,EACHb,EAAM,CACFkB,MAAO,0BACPI,OAAQ,UACRC,SAAU,IACVC,YAAY,EACZC,SAAU,WAEZvB,EAAQ0B,KAAK,KAAI,gDAGjB5B,EAAM,CACJkB,MAAO,iBACPC,YAAa,KAAMF,SAASG,KAAKC,QAAQ,+DACzCC,OAAQ,QACRC,SAAU,IACVC,YAAY,EACZC,SAAU,WACT,yDAEN,kBAlCkB,mCAmCnB,OACE,SAAC,IAAS,CAACI,KAAK,KAAKC,eAAa,YAClC,UAAC,KAAG,CACFC,GAAG,QACHC,EAAE,MACFC,EAAE,MACFC,EAAG,EACHC,aAAa,KACbC,YAAY,MACZC,GAAI,IAAI,WAER,SAAC,IAAI,CACHC,SAAS,MACTC,WAAW,YACXC,UAAU,SACVC,WAAY,OACZJ,GAAI,EAAE,SACP,sBAGD,UAAC,IAAI,CACHC,SAAS,KACTC,WAAW,YACXC,UAAU,SACVE,GAAI,EACJC,GAAI,EACJN,GAAI,EAAE,UACP,+FAC4F,4BAASjC,IAAuB,oDAG7H,UAAC,IAAM,CAACwC,QAAQ,MAAK,WACnB,UAAC,KAAW,CAACC,GAAG,MAAK,WACnB,SAAC,IAAS,CAACH,GAAI,KAAML,GAAI,GAAG,SAAC,SAG7B,SAAC,EAAAS,EAAK,CACJJ,GAAI,KACJK,MAAM,MACNC,YAAY,sBACZC,SAAU,SAACC,GACTzC,EAAOyC,EAAEC,OAAOC,MAClB,QAIJ,SAAC,IAAM,CACLC,YAAY,OACZN,MAAM,MACNO,MAAO,CAAEC,UAAW,IACpBC,QAAS9B,EACT+B,OAAO,UACP,SACD,YAGD,SAAC,IAAM,CACLJ,YAAY,QACZK,MAAM,UACNX,MAAM,OACNT,SAAU,GACVG,WAAY,CAAEkB,KAAM,KACpBL,MAAO,CAAEC,UAAW,IAGpBC,QAAS9C,EAAc,SACxB,sBAOT,C","sources":["Components/Authentication/Verify.js"],"sourcesContent":["// import React from 'react'\r\nimport {\r\n    Button,\r\n    FormControl,\r\n    FormLabel,\r\n    Input,Container,\r\n    Box,\r\n    Text,\r\n    VStack,\r\n  } from \"@chakra-ui/react\";\r\nimport React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useToast } from \"@chakra-ui/toast\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ChatState } from \"../../Context/ChatProvider\";\r\nconst Verify = () => {\r\nconst toast=useToast();\r\nconst history=useHistory();\r\nconst {verifiedEmail}=ChatState();\r\nconst re=\"1\"\r\nlet email=null;\r\n  const [otp, setOTP] = useState(\"\")\r\n  const resendHandler=async ()=>{\r\n    console.log(\"RESENDDDDDDD \")\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n        },\r\n      };\r\n      email=verifiedEmail;\r\n     const response= await axios.post(\r\n        \"/api/user\",\r\n        {\r\n          email,\r\n          re \r\n        },\r\n        config\r\n      );\r\n      console.log(response);\r\n     \r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: error.response.data.message,\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      // setPicLoading(false);\r\n    }\r\n  }\r\n  const submitHandler=async()=>{\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n        },\r\n      };\r\n      await axios.post(\r\n        \"/api/user/verify\",\r\n        {\r\n          verifiedEmail,\r\n          code:otp\r\n        },\r\n        config\r\n      );\r\n    toast({\r\n        title: \"Registration Successful\",\r\n        status: \"success\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      history.push(\"/\")\r\n    }\r\n    catch(error){\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: error.response.data.message+\" OR try requesting otp once again by clicking on Resend OTP \",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n    }\r\n  }\r\n  return (\r\n    <Container maxW=\"xl\" centerContent>\r\n    <Box\r\n      bg=\"white\"\r\n      w=\"80%\"\r\n      h=\"380\"\r\n      p={4}\r\n      borderRadius=\"lg\"\r\n      borderWidth=\"1px\"\r\n      mt={160}\r\n    >\r\n      <Text\r\n        fontSize=\"3xl\"\r\n        fontFamily=\"Work sans\"\r\n        textAlign=\"center\"\r\n        fontWeight={\"bold\"}\r\n        mt={8}\r\n      >\r\n        OTP Verification\r\n      </Text>\r\n      <Text\r\n        fontSize=\"sm\"\r\n        fontFamily=\"Work sans\"\r\n        textAlign=\"center\"\r\n        ml={7}\r\n        mr={7}\r\n        mt={1}\r\n      >\r\n        You Will have recieved an One-Time-Password for verification of your account on this email:<strong>{verifiedEmail}</strong>. \r\n        Enter that OTP here to verify your account. \r\n      </Text>\r\n      <VStack spacing=\"5px\">\r\n        <FormControl id=\"otp\" >\r\n          <FormLabel ml={39.9} mt={30}>\r\n            OTP\r\n          </FormLabel>\r\n          <Input\r\n            ml={39.9}\r\n            width=\"80%\"\r\n            placeholder=\"Enter Your OTP here\"\r\n            onChange={(e) => {\r\n              setOTP(e.target.value);\r\n            }}\r\n          />\r\n        </FormControl>\r\n\r\n        <Button\r\n          colorScheme=\"blue\"\r\n          width=\"80%\"\r\n          style={{ marginTop: 15 }}\r\n          onClick={submitHandler}\r\n          cursor=\"pointer\"\r\n          // isDisabled={true}\r\n        >\r\n          Verify\r\n        </Button>\r\n        <Button\r\n          colorScheme=\"white\"\r\n          color=\"#718096\"\r\n          width=\"100%\"\r\n          fontSize={14}\r\n          fontWeight={{ bold: 750 }}\r\n          style={{ marginTop: 15 }}\r\n          // pl={{ md: 230, sm: 270 }}\r\n          // pr={{ base: 0, md: 0 }}\r\n          onClick={resendHandler}\r\n        >\r\n          Resend OTP\r\n        </Button>\r\n      </VStack>\r\n    </Box>\r\n  </Container>\r\n  )\r\n}\r\n\r\nexport default Verify"],"names":["toast","useToast","history","useHistory","verifiedEmail","ChatState","email","useState","otp","setOTP","resendHandler","console","log","config","headers","axios","re","response","title","description","data","message","status","duration","isClosable","position","submitHandler","code","push","maxW","centerContent","bg","w","h","p","borderRadius","borderWidth","mt","fontSize","fontFamily","textAlign","fontWeight","ml","mr","spacing","id","I","width","placeholder","onChange","e","target","value","colorScheme","style","marginTop","onClick","cursor","color","bold"],"sourceRoot":""}